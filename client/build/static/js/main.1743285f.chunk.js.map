{"version":3,"sources":["components/styledComponents/lakeTile-sc.js","actions/lake-actions.js","components/lakeTile.js","components/lakeList.js","components/chat.js","App.js","reducers/lake-reducer.js","reducers/index.js","api/lake-api.js","sagas/lake-saga.js","index.js"],"names":["LakeTile","styled","button","_templateObject","LakeButton","_templateObject2","actions","SELECT_TILE","GET_LAKES","GET_LAKES_SUCCESS","GET_LAKES_FAILURE","NEW_LAKE","NEW_LAKE_SUCCESS","NEW_LAKE_FAILURE","getLakes","type","payload","newLake","name","arguments","length","undefined","Tile","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleFocus","setState","display","state","count","firstFlag","handleBlur","handleClick","getLakeName","lakes","lake_name","react_default","a","createElement","onClick","onFocus","onBlur","Component","connect","LakesReducer","dispatch","bindActionCreators","LakeList","currentLake","Chat","handleChange","event","message","target","value","handleSubmit","socket","preventDefault","emit","makeChat","chatBoxContent","map","msg","key","on","newContent","push","console","log","bind","assertThisInitialized","onChange","App","lakeList","lakeTile","chat","initialState","action","assign","rootReducer","combineReducers","getLake","fetch","method","headers","Accept","then","response","json","myJson","postLake","data","Content-Type","body","JSON","stringify","mySaga","regenerator_default","wrap","_context","prev","next","sent","put","t0","stop","_marked","newLakePayload","_newLake","_context2","_marked2","_context3","takeLatest","_marked3","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","openSocket","run","getState","subscribe","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1743285f.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const LakeTile = styled.button`\r\n\twidth: 100px;\r\n\theight: 100px;\r\n\tbackground: #00ccff;\r\n\tbox-shadow: none;\r\n\tborder: none;\r\n\r\n\t&:hover {\r\n\t\tbackground: #4ddbff;\r\n\t}\r\n\r\n\t&:focus {\r\n\t\toutline: none;\r\n\t\tbackground: #00a3cc;\r\n\t}\r\n`;\r\n\r\nexport const LakeButton = styled.button`\r\n\twidth: 200px;\r\n\theight: 100px;\r\n\tbackground: #00ccff;\r\n\tbox-shadow: none;\r\n\tborder: none;\r\n\r\n\t&:hover {\r\n\t\tbackground: #4ddbff;\r\n\t}\r\n\r\n\t&:focus {\r\n\t\toutline: none;\r\n\t\tbackground: #00a3cc;\r\n\t}\r\n`;","export const actions = {\r\n\tSELECT_TILE: 'SELECT_TILE',\r\n\tGET_LAKES: 'GET_LAKES',\r\n\tGET_LAKES_SUCCESS: 'GET_LAKES_SUCCESS',\r\n\tGET_LAKES_FAILURE: 'GET_LAKES_FAILURE',\r\n\tNEW_LAKE: 'NEW_LAKE',\r\n\tNEW_LAKE_SUCCESS: 'NEW_LAKE_SUCCESS',\r\n\tNEW_LAKE_FAILURE: 'NEW_LAKE_FAILURE',\r\n}\r\n\r\nexport const selectTile = () => ({\r\n\ttype: actions.SELECT_TILE,\r\n\tpayload: null,\r\n});\r\n\r\nexport const getLakes = () => ({\r\n\ttype: actions.GET_LAKES,\r\n\tpayload: null,\r\n});\r\n\r\nexport const newLake = (name = \"\") => ({\r\n\ttype: actions.NEW_LAKE,\r\n\tpayload: name,\r\n});\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { LakeTile } from './styledComponents/lakeTile-sc';\r\n\r\nimport { getLakes } from '../actions/lake-actions';\r\n\r\nclass Tile extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tcount: 0,\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.setState({\r\n\t\t\tdisplay: \"><>\",\r\n\t\t\tfirstFlag: false,\r\n\t\t})\r\n\t\tthis.props.getLakes();\r\n\t}\r\n\r\n\thandleFocus = () => {\r\n\t\tthis.setState({\r\n\t\t\tdisplay: this.state.count,\r\n\t\t\tfirstFlag: true,\r\n\t\t})\r\n\t}\r\n\r\n\thandleBlur = () => {\r\n\t\tthis.setState({\r\n\t\t\tdisplay: \"><>\"\r\n\t\t})\r\n\t}\r\n\r\n\thandleClick = () => {\r\n\t\tif (this.state.firstFlag === true) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tdisplay: this.state.count,\r\n\t\t\t\tfirstFlag: false,\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcount: ++this.state.count,\r\n\t\t\t\tdisplay: this.state.count,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tgetLakeName = () => {\r\n\t\tif (this.props.lakes.length) {\r\n\t\t\treturn this.props.lakes[0].lake_name;\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n    \treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{this.getLakeName()}\r\n\t\t\t\t</div>\r\n\t\t\t\t<LakeTile onClick={this.handleClick} onFocus={this.handleFocus} onBlur={this.handleBlur}>\r\n\t\t\t\t\t{this.state.display}\r\n\t\t\t\t</LakeTile>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n\t\tlakes: state.LakesReducer.lakes\r\n\t};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn bindActionCreators({ getLakes: getLakes }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tile);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { LakeButton } from './styledComponents/lakeTile-sc';\r\n\r\nimport { newLake } from '../actions/lake-actions';\r\n\r\nclass LakeList extends Component {\r\n  \r\n\trender() {\r\n    return (\r\n      <div>\r\n        <LakeButton onClick={() => this.props.newLake(\"Desert Lake\")}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\nreturn {\r\n  currentLake: state.LakesReducer.currentLake\r\n};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\nreturn bindActionCreators({ newLake: newLake }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LakeList);","import React, { Component } from 'react';\r\n\r\nclass Chat extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: \"\",\r\n      chatBoxContent: []\r\n    };\r\n    const { socket } = this.props;\r\n    socket.on('chat message', (msg) => {\r\n      let newContent = this.state.chatBoxContent;\r\n      newContent.push(msg);\r\n      console.log(msg);\r\n      this.setState({\r\n        chatBoxContent: newContent,\r\n      })\r\n    });\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      message: event.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    const { socket } = this.props;\r\n    event.preventDefault();\r\n    socket.emit('client message', this.state.message);\r\n  }\r\n\r\n  makeChat = () => {\r\n    return (\r\n      <div>\r\n        {this.state.chatBoxContent.map(msg => <div key={msg}> {msg} </div>)}\r\n      </div>\r\n    )\r\n  }\r\n\r\n\trender() {\r\n\r\n    return(\r\n      <div>\r\n        {/* <div>\r\n          {this.state.chatBoxContent.map(msg => <div key={msg}> {msg} </div>)}\r\n        </div> */}\r\n        {this.makeChat()}\r\n        <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\r\n        <input type=\"submit\" value=\"SEND\" onClick={this.handleSubmit} />\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default Chat;\r\n","import React, { Component } from 'react';\r\nimport Tile from './components/lakeTile';\r\nimport LakeList from './components/lakeList';\r\nimport Chat from './components/chat';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <LakeList>Add Desert Lake</LakeList>\r\n        <Tile></Tile>\r\n        <Chat socket={this.props.socket} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { actions } from '../actions/lake-actions';\r\n\r\nconst initialState = {\r\n\t\tlakes: [],\r\n\t\tcurrentLake: \"\",\r\n\t}\r\n\r\nfunction LakesReducer(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase actions.GET_LAKES_SUCCESS:\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tlakes: action.payload\r\n\t\t\t});\r\n\t\tcase actions.GET_LAKES_FAILURE:\r\n\t\t\tconsole.log(\"Failed to get lakes: \",action.payload);\r\n\t\t\treturn state;\r\n\t\tcase actions.NEW_LAKE_SUCCESS:\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tcurrentLake: action.payload\r\n\t\t\t});\r\n\t\tcase actions.NEW_LAKE_FAILURE:\r\n\t\t\tconsole.log(\"Failed \", action.payload);\r\n\t\t\treturn state;\r\n\t\tdefault:\t\t\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport default LakesReducer;\r\n","import { combineReducers } from 'redux';\r\nimport LakesReducer from './lake-reducer';\r\nconst rootReducer = combineReducers({\r\n    LakesReducer,\r\n});\r\n\r\nexport default rootReducer;","export const getLake = () => {\r\n\tconst lake = fetch('/api/lakes', {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\t\"Accept\": \"application/json\",\r\n\t\t}\r\n\t})\r\n\t// const lake = fetch('http://localhost:8000/api/lakes')\r\n\t.then(function(response) {\r\n\t\treturn response.json();\r\n\t})\r\n\t.then(function(myJson) {\r\n\t\treturn myJson;\r\n\t});\r\n\r\n\treturn lake;\r\n}\r\n\r\nexport const postLake = (data = {}) => {\r\n\t// return fetch('http://localhost:8000/api/lakes', {\r\n\treturn fetch('/api/lakes', {\r\n\t\tmethod: \"POST\",\r\n\t\theaders: {\r\n\t\t\t'Accept': 'application/json',\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t},\r\n\t\tbody: JSON.stringify(data),\r\n\t})\r\n\t\t.then(response => response.json());\r\n}","import { call, put, takeLatest } from 'redux-saga/effects';\r\nimport { actions } from '../actions/lake-actions';\r\nimport { getLake, postLake } from '../api/lake-api';\r\n\r\nfunction* getLakes(action) {\r\n\ttry {\r\n\t\tconst lakes = yield call(getLake, action.payload);\r\n\t\tyield put({type: actions.GET_LAKES_SUCCESS, payload: lakes});\r\n\t} catch (e) {\r\n\t\tyield put({type: actions.GET_LAKES_FAILURE, payload: e.message});\r\n\t}\r\n}\r\n\r\nfunction* newLake(action) {\r\n\ttry {\r\n\t\tconst newLakePayload = {\r\n\t\t\tlake_name: action.payload,\r\n\t\t}\r\n\t\tconst newLake = yield call(postLake, newLakePayload);\r\n\t\tyield put({type: actions.NEW_LAKE_SUCCESS, payload: newLake});\r\n\t} catch (e) {\r\n\t\tyield put({type: actions.NEW_LAKE_FAILURE, payload: e.message});\r\n\t}\r\n}\r\n\r\nfunction* mySaga() {\r\n\tyield takeLatest(actions.GET_LAKES, getLakes);\r\n\tyield takeLatest(actions.NEW_LAKE, newLake);\r\n}\r\n\r\nexport default mySaga;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n// import * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootReducer from './reducers';\r\nimport mySaga from './sagas/lake-saga';\r\n\r\nimport openSocket from 'socket.io-client';\r\n\r\n// create the saga middleware\r\nconst sagaMiddleware = createSagaMiddleware();\r\n// mount it on the Store\r\nconst store = createStore(\r\n\trootReducer,\r\n\tapplyMiddleware(sagaMiddleware)\r\n);\r\n\r\nconst socket = openSocket('http://localhost:8000/');\r\n\r\n// then run the saga\r\nsagaMiddleware.run(mySaga);\r\n\r\n// Log the initial state\r\nconsole.log(store.getState())\r\n\r\n// Every time the state changes, log it\r\n// Note that subscribe() returns a function for unregistering the listener\r\nconst unsubscribe = store.subscribe(() => console.log(store.getState()))\r\n\r\n// render the application\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App socket={socket}/>\r\n\t</Provider>\r\n\t, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n\r\n// Stop listening to state updates\r\n// unsubscribe()"],"sourceRoot":""}